<?xml version="1.0"?>
<project name="build-common" default="compile" xmlns:artifact="urn:maven-artifact-ant">
  <!-- import the OOO build macros -->
  <property name="ooo-build.vers" value="2.6"/>
  <ant antfile="etc/ooo-build.xml"/>
  <import file="${user.home}/.m2/ooo-build/${ooo-build.vers}/ooo-build.xml"/>

  <property name="target.dir"   value="target"/>
  <property name="src.dir"      value="src/main/java"/>
  <property name="classes.dir"  value="${target.dir}/classes"/>
  <property name="tsrc.dir"     value="src/test/java"/>
  <property name="tclasses.dir" value="${target.dir}/test-classes"/>
  <property name="webapp.dir"   value="${target.dir}/webapp"/>

  <target name="-prepare" depends="-init-ooo">
    <mavendep pom="pom.xml" id="compile"/>
    <mavendep pom="pom.xml" id="test" scope="test"/>
    <path id="test.classpath">
      <path refid="test.path"/>
      <pathelement location="${classes.dir}"/>
      <pathelement location="${tclasses.dir}"/>
    </path>

    <mkdir dir="${target.dir}"/>
  </target>

  <target name="-prep-webapp" depends="-prepare">
    <mkdir dir="${webapp.dir}"/>
    <copy todir="${webapp.dir}">
      <fileset dir="src/main/webapp" includes="**"/>
    </copy>
    <!-- prepare a Resources module so that our GWT app can slurp in src/main/resources -->
    <mkdir dir="${target.dir}/rsrcmod"/>
    <copy todir="${target.dir}/rsrcmod">
      <fileset dir="src/main" includes="resources/**"/>
    </copy>
    <echo file="${target.dir}/rsrcmod/Resources.gwt.xml">
      &lt;module&gt;
        &lt;public path="resources"/&gt;
      &lt;/module&gt;
    </echo>
    <!-- we need to resolve this for the GWT classpath to avoid a bunch of warnings -->
    <artifact:dependencies sourcesFileSetId="validation.sources.fileset">
      <dependency groupId="javax.validation" artifactId="validation-api" version="1.0.0.GA"/>
    </artifact:dependencies>
    <pathconvert property="validation.source.jar" refid="validation.sources.fileset"/>
 </target>

  <target name="clean" description="Cleans out all build results.">
    <delete dir="${target.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Compiles the code.">
    <mkdir dir="${classes.dir}"/>
    <ooojavac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="compile.path"/>

    <mkdir dir="${tclasses.dir}"/>
    <ooojavac srcdir="${tsrc.dir}" destdir="${tclasses.dir}" classpathref="test.classpath"/>
  </target>

  <property name="test" value=""/>
  <target name="test" depends="compile"
          description="Runs unit tests. Use -Dtest=Foo to run only FooTest.">
    <taskdef name="unit" classpathref="test.classpath"
      classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <mkdir dir="${target.dir}/test-reports"/>
    <unit printsummary="off" haltonfailure="yes" fork="${junit.fork}">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${tclasses.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <batchtest todir="${target.dir}/test-reports">
        <fileset dir="${tsrc.dir}" includes="**/*${test}*Test.java"/>
      </batchtest>
    </unit>
  </target>

  <target name="compile-html" depends="-prep-webapp,compile" description="Compiles HTML game.">
    <java fork="true" maxmemory="1024M" failonerror="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="${javax.validation:validation-api:jar}"/>
        <pathelement location="${validation.source.jar}"/>
        <pathelement path="${src.dir}"/>
        <pathelement path="${target.dir}/rsrcmod"/>
        <pathelement location="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <jvmarg value="-Djava.awt.headless=true"/>
      <!--<arg value="-style"/><arg value="pretty"/>-->
      <!--<arg value="-gen"/><arg value="${target.dir}/gwt-gen"/>-->
      <arg value="-war"/>
      <arg value="${target.dir}/webapp"/>
      <arg value="${gwt.module}"/>
    </java>
  </target>

  <!-- Various targets for running the game -->
  <target name="run-html" depends="compile-html" description="Serves HTML game on localhost.">
    <artifact:dependencies pathId="jetty-ant.classpath">
      <remoteRepository id="jetty-repo" url="http://oss.sonatype.org/content/groups/jetty/"/>
      <Dependency groupId="org.mortbay.jetty" artifactId="jetty-ant"
                  version="7.4.2.v20110526" scope="runtime" />
    </artifact:dependencies>
    <taskdef classpathref="jetty-ant.classpath" resource="tasks.properties"/>
    <echo>=================================================================</echo>
    <echo>Browse to http://localhost:8080/${ant.project.name}/${html.index}</echo>
    <echo>=================================================================</echo>
    <jetty tempDirectory="${target.dir}/jetty-temp">
      <webApp name="html-server" warfile="${target.dir}/webapp" contextpath="/${ant.project.name}"/>
    </jetty>
  </target>

  <target name="run-devmode" depends="-prep-webapp,compile"
          description="Runs game in GWT development mode.">
    <java fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="${javax.validation:validation-api:jar}"/>
        <pathelement location="${validation.source.jar}"/>
        <pathelement path="${src.dir}"/>
        <pathelement path="${target.dir}/rsrcmod"/>
        <pathelement location="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="index.html"/>
      <arg value="-war"/>
      <arg value="${target.dir}/webapp"/>
      <arg value="-startupUrl"/>
      <arg value="${html.index}"/>
      <arg value="${gwt.module}"/>
    </java>
  </target>

  <target name="run-java" depends="compile" description="Runs game in JVM.">
    <java fork="true" classname="${java.classname}">
      <classpath>
        <path refid="compile.path"/>
        <pathelement location="${classes.dir}"/>
      </classpath>
    </java>
  </target>
</project>
