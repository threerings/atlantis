<?xml version="1.0"?>
<project name="build-common" default="compile" xmlns:artifact="urn:maven-artifact-ant">
  <property name="target.dir"   value="target"/>
  <property name="src.dir"      value="src/main/java"/>
  <property name="classes.dir"  value="${target.dir}/classes"/>
  <property name="tsrc.dir"     value="src/test/java"/>
  <property name="tclasses.dir" value="${target.dir}/test-classes"/>
  <property name="webapp.dir"   value="${target.dir}/webapp"/>

  <!-- Maven Ant task wiring -->
  <property name="maven-ant.vers" value="2.1.3"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url"
            value="http://mirrors.ibiblio.org/pub/mirrors/apache/maven/binaries"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}/maven-ant-tasks-${maven-ant.vers}.jar"
         dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="classpath" pomRefId="pom" useScope="compile"/>
    <artifact:dependencies pathId="test.classpath" pomRefId="pom" useScope="test"/>
  </target>

  <!-- Various build targets -->
  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${target.dir}"/>
  </target>

  <target name="-prep-webapp" depends="-prepare">
    <mkdir dir="${webapp.dir}"/>
    <copy todir="${webapp.dir}">
      <fileset dir="war" includes="**"/>
    </copy>
  </target>

  <target name="clean" description="Cleans out all build results.">
    <delete dir="${target.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Compiles the code.">
    <property name="java.vers" value="1.6"/>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" deprecation="on" source="${java.vers}" target="${java.vers}">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>

    <mkdir dir="${tclasses.dir}"/>
    <javac srcdir="${tsrc.dir}" destdir="${tclasses.dir}" includeAntRuntime="false"
           debug="on" deprecation="on" source="${java.vers}" target="${java.vers}">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <property name="test" value=""/>
  <target name="test" depends="compile"
          description="Runs unit tests. Use -Dtest=Foo to run only FooTest.">
    <taskdef name="unit" classpathref="test.classpath"
      classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <mkdir dir="${target.dir}/test-reports"/>
    <unit printsummary="off" haltonfailure="yes" fork="${junit.fork}">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${tclasses.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <batchtest todir="${target.dir}/test-reports">
        <fileset dir="${tsrc.dir}" includes="**/*${test}*Test.java"/>
      </batchtest>
    </unit>
  </target>

  <target name="compile-html" depends="-prep-webapp,compile" description="Compiles HTML game.">
    <java fork="true" maxmemory="1024M" failonerror="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement path="${src.dir}"/>
        <pathelement location="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <jvmarg value="-Djava.awt.headless=true"/>
      <!--<arg value="-style"/><arg value="pretty"/>-->
      <!--<arg value="-gen"/><arg value="${target.dir}/gwt-gen"/>-->
      <arg value="-war"/>
      <arg value="${target.dir}/webapp"/>
      <arg value="${html.classname}"/>
    </java>
  </target>

  <!-- Various targets for running the game -->
  <target name="run-html" depends="compile-html" description="Serves HTML game on localhost.">
    <artifact:dependencies pathId="jetty-ant.classpath">
      <remoteRepository url="http://oss.sonatype.org/content/groups/jetty/"/>
      <Dependency groupId="org.mortbay.jetty" artifactId="jetty-ant"
                  version="7.4.2.v20110526" scope="runtime" />
    </artifact:dependencies>
    <taskdef classpathref="jetty-ant.classpath" resource="tasks.properties"/>
    <echo>=================================================================</echo>
    <echo>Browse to http://localhost:8080/${ant.project.name}/${html.index}</echo>
    <echo>=================================================================</echo>
    <jetty tempDirectory="${target.dir}/jetty-temp">
      <webApp name="html-server" warfile="${target.dir}/webapp" contextpath="/${ant.project.name}"/>
    </jetty>
  </target>

  <target name="run-devmode" depends="-prep-webapp,compile"
          description="Runs game in GWT development mode.">
    <java fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement path="${src.dir}"/>
        <pathelement location="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="index.html"/>
      <arg value="-war"/>
      <arg value="${target.dir}/webapp"/>
      <arg value="-startupUrl"/>
      <arg value="${html.index}"/>
      <arg value="${html.classname}"/>
    </java>
  </target>

  <target name="run-java" depends="compile" description="Runs game in JVM.">
    <java fork="true" classname="${java.classname}">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <path refid="classpath"/>
      </classpath>
    </java>
  </target>
</project>
